#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <3000>;
    acceleration-exponent = <2>;
    trigger-period-ms = <16>;
};


/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <180>;
            quick-tap-ms = <150>;
            global-quick-tap;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <2>;      // 1
            time-to-max-speed-ms = <3000>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };


    combos {
        compatible = "zmk,combos";

        esc1 {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        bkk {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 24>;
        };

        altl {
            bindings = <&kp LEFT_ALT>;
            key-positions = <30 31>;
        };

        altr {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <38 39>; 
        };

        guil {
            bindings = <&kp LEFT_GUI>;
            key-positions = <15 16>;
        };

        guir {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <24 25>;
        };

        delc {
            bindings = <&kp DELETE>;
            key-positions = <9 10>;
        };
    };


    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W      &kp E     &kp R  &kp T                              &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S      &kp D     &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X      &kp C     &kp V  &kp B       &kp SPACE              &kp DOWN              &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                             &kp LGUI  &lt 1 TAB  &lt 2 SPACE                                              &lt 3 ENTER  &lt 4 BACKSPACE  &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "SYMBOL";
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                                        &mmv MOVE_UP                     &kp GRAVE  &kp TILDE         &kp MINUS          &kp EQUAL  &kp BSLH    &none
&none  &bt BT_SEL 4  &none  &none         &none         &none                            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none      &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LBKT   &kp RBKT  &none
&none  &kp LSHFT     &kp LCTRL        &kp LEFT_GUI  &kp LEFT_ALT  &none &kp C_MUTE                    &mmv MOVE_DOWN                   &none      &none             &kp COMMA          &kp DOT    &kp RSHFT   &none
                                         &none        &trans        &kp SPACE                                                                         &kp ENTER  &kp BSPC          &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "NUMBER";
            bindings = <
&none  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                           &mmv MOVE_UP                     &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &none
&none  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp N6      &kp N7      &kp N8      &kp N9      &kp N0  &none
&none  &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &none  &trans                    &mmv MOVE_DOWN                   &none       &none       &none       &none       &kp RSHFT  &none
                                    &none     &kp TAB     &trans                                                             &kp ENTER   &kp BSPC     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "FN";
            bindings = <
&studio_unlock   &kp F1      &kp F2      &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &none
&trans  &kp F11      &rgb_ug RGB_OFF  &rgb_ug RGB_ON    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD   &none  &none
&trans  &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT  &none   &kp C_MUTE                    &mmv MOVE_DOWN                   &none       &kp RALT  &kp RGUI  &kp RCTRL  &kp RSHFT   &none
                                &none      &kp TAB   &kp SPACE                                                                   &trans  &kp BSPC     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer_4 {
            display-name = "NAV";
            bindings = <
&studio_unlock   &kp F1      &kp F2      &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &none      &none   &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &none
&none  &trans      &mkp LCLK   &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none      &none   &none       &none              &none  &none
&none  &sys_reset  &trans      &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &none      &none   &none       &none              &none   &none
                                &none      &mo 5      &kp SPACE                                                                   &kp ENTER  &trans     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer_5 {
            display-name = "MOUSE";
            bindings = <
&studio_unlock   &kp HOME        &mmv MOVE_UP    &kp END          &kp PG_UP  &msc SCRL_UP                                 &mmv MOVE_UP                     &none       &none   &none     &none     &none          &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp PG_DN  &msc SCRL_DOWN                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none      &none   &mkp MB1  &mkp MB2  &mkp MB3  &none
&none  &kp LC(Z)       &kp LC(X)       &kp LC(C)        &kp LC(V)  &none   &kp C_MUTE                    &mmv MOVE_DOWN                   &none      &none   &none     &none     &none  &none
                                &none      &trans      &kp SPACE                                                                  &kp ENTER  &trans     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
